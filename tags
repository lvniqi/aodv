!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTIVE_ROUTE_TIMEOUT	parameters.h	9;"	d
ACTIVE_ROUTE_TIMEOUT_HELLO	parameters.h	19;"	d
ACTIVE_ROUTE_TIMEOUT_LLF	parameters.h	14;"	d
ALLOWED_HELLO_LOSS	parameters.h	24;"	d
AODV_BROADCAST	defs.h	24;"	d
AODV_HELLO	defs.h	18;"	d
AODV_PORT	defs.h	26;"	d
AODV_RERR	defs.h	21;"	d
AODV_RREP	defs.h	20;"	d
AODV_RREP_ACK	defs.h	22;"	d
AODV_RREQ	defs.h	19;"	d
AODV_msg	defs.h	/^}AODV_msg;$/;"	t	typeref:struct:__anon2
BLACKLIST_TIMEOUT	parameters.h	26;"	d
CC	Makefile	/^CC = mipsel-linux-gcc$/;"	m
CCFLAGS	Makefile	/^CCFLAGS = -Wall$/;"	m
DELETE_PERIOD	parameters.h	11;"	d
DELETE_PERIOD_HELLO	parameters.h	21;"	d
DELETE_PERIOD_LLF	parameters.h	16;"	d
HELLO_INTERVAL	parameters.h	27;"	d
IFNAMESIZE	defs.h	31;"	d
INCLUDES	Makefile	/^INCLUDES =$/;"	m
INVALID	routing_table.h	9;"	d
K	parameters.h	6;"	d
LIBS	Makefile	/^LIBS = $/;"	m
LOCAL_ADD_TTL	parameters.h	28;"	d
MAX_REPAIR_TTL	parameters.h	29;"	d
MY_ROUTE_TIMEOUT	parameters.h	30;"	d
NET_DIAMETER	parameters.h	31;"	d
NET_TRAVERSAL_TIME	parameters.h	32;"	d
NEXT_HOP_WAIT	parameters.h	33;"	d
NODE_TRAVERSAL_TIME	parameters.h	34;"	d
OBJS	Makefile	/^OBJS = $(SRCS:.c = .o)$/;"	m
PATH_DISCOVERY_TIME	parameters.h	35;"	d
RECE_BUF_SIZE	aodv_socket.h	6;"	d
RERR_RATELIMIT	defs.h	29;"	d
RERR_RATELIMIT	parameters.h	36;"	d
RING_TRAVERSAL_TIME	parameters.h	37;"	d
RREQ	aodv_rreq.h	/^}RREQ;$/;"	t	typeref:struct:__anon1
RREQ_DEST_ONLY	aodv_rreq.h	33;"	d
RREQ_GRATUITOUS	aodv_rreq.h	32;"	d
RREQ_JOIN	aodv_rreq.h	30;"	d
RREQ_RATELIMIT	defs.h	28;"	d
RREQ_RATELIMIT	parameters.h	39;"	d
RREQ_REPAIR	aodv_rreq.h	31;"	d
RREQ_RETRIES	parameters.h	38;"	d
RREQ_SIZE	aodv_rreq.h	28;"	d
RREQ_UNKNOWN_SEQNO	aodv_rreq.h	34;"	d
RT_INET_DEST	routing_table.h	15;"	d
RT_INV_SEQNO	routing_table.h	14;"	d
RT_REPAIR	routing_table.h	13;"	d
RT_UNIDIR	routing_table.h	12;"	d
SEND_BUF_SIZE	aodv_socket.h	7;"	d
SOCK_RECVBUF_SIZE	aodv_socket.c	11;"	d	file:
SRCS	Makefile	/^SRCS = $(shell echo *.c)$/;"	m
TARGET	Makefile	/^TARGET = aodv$/;"	m
TIMEOUT_BUFFER	parameters.h	40;"	d
TTL_INCREMENT	parameters.h	41;"	d
TTL_START	parameters.h	10;"	d
TTL_START_HELLO	parameters.h	20;"	d
TTL_START_LLF	parameters.h	15;"	d
TTL_THRESHOLD	parameters.h	42;"	d
VALID	routing_table.h	10;"	d
_AODV_RREQ_H_	aodv_rreq.h	2;"	d
_AODV_SOCKET_H_	aodv_socket.h	2;"	d
_AODV_TIMEOUT_H_	aodv_timeout.h	2;"	d
_DEFINE_H_	defs.h	2;"	d
_LIST_H_	list.h	2;"	d
_PARAMS_H_	parameters.h	2;"	d
_ROUTING_TABLE_H_	routing_table.h	2;"	d
_TIMER_QUEUE_H_	timer_queue.h	2;"	d
ack_timer	routing_table.h	/^	struct timer ack_timer;$/;"	m	struct:__anon3	typeref:struct:__anon3::timer
aodv_socket_init	aodv_socket.c	/^void aodv_socket_init(void)$/;"	f
aodv_socket_new_msg	aodv_socket.c	/^s8_t *aodv_socket_new_msg(void)$/;"	f
aodv_socket_package_process	aodv_socket.c	/^void aodv_socket_package_process(AODV_msg *aodv_msg, s32_t len, struct in_addr src, struct in_addr dest, s32_t ttl)$/;"	f
aodv_socket_queue_msg	aodv_socket.c	/^s8_t *aodv_socket_queue_msg(AODV_msg *aodv_msg, s32_t len)$/;"	f
aodv_socket_read	aodv_socket.c	/^void aodv_socket_read(s32_t fd)$/;"	f
aodv_socket_send	aodv_socket.c	/^void aodv_socket_send(AODV_msg *aodv_msg, struct in_addr dest, s32_t len, s32_t ttl, struct dev_info *dev)$/;"	f
bl_timer	aodv_rreq.h	/^	struct timer bl_timer;$/;"	m	struct:rreq_blacklist	typeref:struct:rreq_blacklist::timer
broadcast	defs.h	/^	struct in_addr broadcast;$/;"	m	struct:dev_info	typeref:struct:dev_info::in_addr
d	aodv_rreq.h	/^	u8_t d:1;$/;"	m	struct:__anon1
data	timer_queue.h	/^	void *data;$/;"	m	struct:timer
dest_addr	aodv_rreq.h	/^	struct in_addr dest_addr;$/;"	m	struct:rreq_blacklist	typeref:struct:rreq_blacklist::in_addr
dest_addr	aodv_rreq.h	/^	u32_t dest_addr;$/;"	m	struct:__anon1
dest_addr	routing_table.h	/^	struct in_addr dest_addr;$/;"	m	struct:__anon3	typeref:struct:__anon3::in_addr
dest_seqno	aodv_rreq.h	/^	u32_t dest_seqno;$/;"	m	struct:__anon1
dest_seqno	routing_table.h	/^	u32_t dest_seqno;$/;"	m	struct:__anon3
dev	defs.h	/^	struct dev_info dev;$/;"	m	struct:host_info	typeref:struct:host_info::dev_info
dev_info	defs.h	/^struct dev_info $/;"	s
enabled	defs.h	/^	u8_t enabled;$/;"	m	struct:dev_info
flags	routing_table.h	/^	u8_t flags;$/;"	m	struct:__anon3
g	aodv_rreq.h	/^	u8_t g:1;$/;"	m	struct:__anon1
handler	timer_queue.h	/^	timeout_func_t handler;$/;"	m	struct:timer
hash	routing_table.h	/^	hash_value hash;$/;"	m	struct:__anon3
hash_value	routing_table.h	/^typedef u32_t hash_value;$/;"	t
hello_cnt	routing_table.h	/^	u8_t hello_cnt;$/;"	m	struct:__anon3
hello_timer	routing_table.h	/^	struct timer hello_timer;$/;"	m	struct:__anon3	typeref:struct:__anon3::timer
hopcnt	aodv_rreq.h	/^	u8_t hopcnt;$/;"	m	struct:__anon1
hopcnt	routing_table.h	/^	u8_t hopcnt;$/;"	m	struct:__anon3
host_info	defs.h	/^struct host_info\/\/ no need for other variables in example$/;"	s
ifname	defs.h	/^	s8_t ifname[IFNAMESIZE];$/;"	m	struct:dev_info
ipaddr	defs.h	/^	struct in_addr ipaddr;$/;"	m	struct:dev_info	typeref:struct:dev_info::in_addr
j	aodv_rreq.h	/^	u8_t j:1;$/;"	m	struct:__anon1
l	aodv_rreq.h	/^	list_t l;$/;"	m	struct:rreq_blacklist
l	aodv_rreq.h	/^	list_t l;$/;"	m	struct:rreq_record
l	routing_table.h	/^	list_t l;$/;"	m	struct:__anon3
l	routing_table.h	/^	list_t l;$/;"	m	struct:prenode
l	timer_queue.h	/^	list_t l;$/;"	m	struct:timer
last_broadcast_time	defs.h	/^	struct timeval last_broadcast_time;$/;"	m	struct:host_info	typeref:struct:host_info::timeval
last_hello_time	routing_table.h	/^	struct timeval last_hello_time;$/;"	m	struct:__anon3	typeref:struct:__anon3::timeval
list_add	list.c	/^void list_add(list_t *head, list_t *node)$/;"	f
list_delete	list.c	/^static void list_delete(list_t *prev, list_t *next)$/;"	f	file:
list_entry	list.h	24;"	d
list_for_each	list.h	12;"	d
list_for_each_reverse	list.h	16;"	d
list_for_each_safe	list.h	20;"	d
list_init_head	list.c	/^void list_init_head(list_t *head)\/\/Init list_head$/;"	f
list_insert	list.c	/^static void list_insert(list_t *node, list_t *prev, list_t *next)$/;"	f	file:
list_is_empty	list.c	/^u8_t list_is_empty(const list_t *head)$/;"	f
list_push_back	list.c	/^void list_push_back(list_t *head, list_t *node)$/;"	f
list_push_front	list.c	/^void list_push_front(list_t *head, list_t *node)$/;"	f
list_remove	list.c	/^void list_remove(list_t *node)$/;"	f
list_t	list.h	/^typedef struct list_t$/;"	s
list_t	list.h	/^}list_t;$/;"	t	typeref:struct:list_t
list_unattached	list.c	/^u8_t list_unattached(const list_t *head)$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
neighbor	routing_table.h	/^	struct in_addr neighbor;$/;"	m	struct:prenode	typeref:struct:prenode::in_addr
netmask	defs.h	/^	struct in_addr netmask;$/;"	m	struct:dev_info	typeref:struct:dev_info::in_addr
next	list.h	/^	struct list_t *prev, *next;$/;"	m	struct:list_t	typeref:struct:list_t::
next_hop	routing_table.h	/^	struct in_addr next_hop;$/;"	m	struct:__anon3	typeref:struct:__anon3::in_addr
nprenode	routing_table.h	/^	u32_t nprenode;$/;"	m	struct:__anon3
num_rerr	aodv_socket.c	/^u32_t num_rerr;$/;"	v
num_rreq	aodv_socket.c	/^u32_t num_rreq;$/;"	v
orig_addr	aodv_rreq.h	/^	struct in_addr orig_addr;$/;"	m	struct:rreq_record	typeref:struct:rreq_record::in_addr
orig_addr	aodv_rreq.h	/^	u32_t orig_addr;$/;"	m	struct:__anon1
orig_seqno	aodv_rreq.h	/^	u32_t orig_seqno;$/;"	m	struct:__anon1
prenode	routing_table.h	/^typedef struct prenode$/;"	s
prenode_t	routing_table.h	/^}prenode_t;$/;"	t	typeref:struct:prenode
prenodes	routing_table.h	/^	list_t prenodes;$/;"	m	struct:__anon3
prev	list.h	/^	struct list_t *prev, *next;$/;"	m	struct:list_t	typeref:struct:list_t::list_t
r	aodv_rreq.h	/^	u8_t r:1;$/;"	m	struct:__anon1
ratelimit	main.c	/^s32_t ratelimit = 1;$/;"	v
rec_timer	aodv_rreq.h	/^	struct timer rec_timer;$/;"	m	struct:rreq_record	typeref:struct:rreq_record::timer
recv_buf	aodv_socket.c	/^s8_t recv_buf[RECE_BUF_SIZE];$/;"	v
rerr_ratelimit	aodv_socket.c	/^struct timeval rerr_ratelimit[RERR_RATELIMIT];$/;"	v	typeref:struct:timeval
res1	aodv_rreq.h	/^	u8_t res1:3;$/;"	m	struct:__anon1
res2	aodv_rreq.h	/^	u8_t res2;$/;"	m	struct:__anon1
rreq_blacklist	aodv_rreq.h	/^struct rreq_blacklist$/;"	s
rreq_blacklist_insert	aodv_rreq.c	/^struct rreq_blacklist *rreq_blacklist_insert(struct in_addr dest_addr)$/;"	f
rreq_blacklist_timeout	aodv_timeout.c	/^void rreq_blacklist_timeout(void *arg)$/;"	f
rreq_blacklists	aodv_rreq.c	/^static list_t rreq_blacklists = {&rreq_blacklists, &rreq_blacklists};$/;"	v	file:
rreq_check_blacklist	aodv_rreq.c	/^struct rreq_blacklist *rreq_check_blacklist(struct in_addr dest_addr)$/;"	f
rreq_check_record	aodv_rreq.c	/^struct rreq_record *rreq_check_record(struct in_addr orig_addr, u32_t rreq_id)$/;"	f
rreq_create	aodv_rreq.c	/^RREQ *rreq_create(u8_t flags, struct in_addr dest_addr, u32_t dest_seqno, struct in_addr orig_addr)$/;"	f
rreq_forward	aodv_rreq.c	/^void rreq_forward(RREQ *rreq, s32_t len, s32_t ttl)$/;"	f
rreq_id	aodv_rreq.h	/^	u32_t rreq_id;$/;"	m	struct:__anon1
rreq_id	aodv_rreq.h	/^	u32_t rreq_id;$/;"	m	struct:rreq_record
rreq_id	defs.h	/^	u32_t rreq_id;$/;"	m	struct:host_info
rreq_process	aodv_rreq.c	/^void rreq_process(RREQ *rreq, s32_t len, struct in_addr ip_src, struct in_addr ip_dest, s32_t ip_ttl)$/;"	f
rreq_ratelimit	aodv_socket.c	/^struct timeval rreq_ratelimit[RREQ_RATELIMIT];\/\/limit the package num send every second$/;"	v	typeref:struct:timeval
rreq_record	aodv_rreq.h	/^struct rreq_record$/;"	s
rreq_record_insert	aodv_rreq.c	/^struct rreq_record *rreq_record_insert(struct in_addr orig_addr, u32_t rreq_id)$/;"	f
rreq_record_timeout	aodv_timeout.c	/^void rreq_record_timeout(void *arg)$/;"	f
rreq_records	aodv_rreq.c	/^static list_t rreq_records = {&rreq_records, &rreq_records};$/;"	v	file:
rreq_send	aodv_rreq.c	/^void rreq_send(struct in_addr dest_addr, u32_t dest_seqno, s32_t ttl, u8_t flags)$/;"	f
rt_table_find	routing_table.c	/^rt_table_t *rt_table_find(struct in_addr rreq_orig)$/;"	f
rt_table_insert	routing_table.c	/^rt_table_t *rt_table_insert(struct in_addr rreq_orig, struct in_addr ip_src, u32_t rreq_new_hopcnt, u32_t rreq_orig_seqno, u32_t life, u8_t state, u8_t flags)$/;"	f
rt_table_t	routing_table.h	/^}rt_table_t;$/;"	t	typeref:struct:__anon3
rt_table_update	routing_table.c	/^rt_table_t *rt_table_update(rt_table_t *rev_rt, struct in_addr ip_src, u32_t rreq_new_hopcnt, u32_t rreq_orig_seqno, u32_t life, u8_t state, u8_t flags)$/;"	f
rt_timer	routing_table.h	/^	struct timer rt_timer;$/;"	m	struct:__anon3	typeref:struct:__anon3::timer
s32_t	defs.h	/^typedef signed   int  s32_t;$/;"	t
s8_t	defs.h	/^typedef signed   char s8_t;$/;"	t
send_buf	aodv_socket.c	/^s8_t send_buf[SEND_BUF_SIZE];$/;"	v
seqno	defs.h	/^	u32_t seqno;$/;"	m	struct:host_info
seqno_incr	aodv_rreq.h	36;"	d
sock	defs.h	/^	s32_t sock;           \/\/socket associated with this device$/;"	m	struct:dev_info
state	routing_table.h	/^	u8_t state;$/;"	m	struct:__anon3
this_host	defs.h	/^struct host_info this_host;$/;"	v	typeref:struct:host_info
timeout	timer_queue.h	/^	struct timeval timeout;$/;"	m	struct:timer	typeref:struct:timer::timeval
timeout_func_t	timer_queue.h	/^typedef void (*timeout_func_t)(void *);$/;"	t
timer	timer_queue.h	/^struct timer\/\/timer_t conflicting declaration of sys-define$/;"	s
timer_add	timer_queue.c	/^void timer_add(struct timer *t)$/;"	f
timer_init	timer_queue.c	/^s32_t timer_init(struct timer *t, timeout_func_t f, void *data)$/;"	f
timer_remove	timer_queue.c	/^s32_t timer_remove(struct timer *t)$/;"	f
timer_set_timeout	timer_queue.c	/^void timer_set_timeout(struct timer *t, long msec)$/;"	f
timeval_diff	timer_queue.h	/^static inline long timeval_diff(struct timeval *t1, struct timeval *t2)$/;"	f
tq	timer_queue.c	/^list_t tq = {&tq, &tq};$/;"	v
type	aodv_rreq.h	/^	u8_t type;$/;"	m	struct:__anon1
type	defs.h	/^	u8_t type;$/;"	m	struct:__anon2
u	aodv_rreq.h	/^	u8_t u:1;$/;"	m	struct:__anon1
u32_t	defs.h	/^typedef unsigned int  u32_t;$/;"	t
u8_t	defs.h	/^typedef unsigned char u8_t;$/;"	t
used	timer_queue.h	/^	u8_t used;$/;"	m	struct:timer
wait_on_reboot	main.c	/^s32_t wait_on_reboot = 1;$/;"	v
